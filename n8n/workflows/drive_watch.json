{
  "name": "Drive Watch - Auto Ingestion",
  "nodes": [
    {
      "parameters": {
        "resource": "file",
        "operation": "watch",
        "folderId": "KNOWLEDGE_BASE_FOLDER_ID",
        "options": {
          "watchEvents": ["add", "update"]
        }
      },
      "id": "drive-watch-trigger",
      "name": "Watch Drive Folder",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [0, 0]
    },
    {
      "parameters": {
        "jsCode": "// Process drive file change event\nconst file = $input.first().json;\nconst fileId = file.id;\nconst fileName = file.name;\nconst mimeType = file.mimeType;\n\n// Filter supported file types\nconst supportedTypes = [\n  'application/pdf',\n  'application/vnd.google-apps.document',\n  'application/msword',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/plain'\n];\n\nif (!supportedTypes.includes(mimeType)) {\n  return {\n    skip: true,\n    reason: `Unsupported file type: ${mimeType}`\n  };\n}\n\nreturn {\n  fileId,\n  fileName,\n  mimeType,\n  skip: false\n};"
      },
      "id": "process-file-event",
      "name": "Process File Event", 
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [200, 0]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.skip}}",
              "rightValue": false,
              "operator": {
                "type": "boolean"
              }
            }
          ]
        }
      },
      "id": "should-process",
      "name": "Should Process?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [400, 0]
    },
    {
      "parameters": {
        "url": "http://agenta:8001/agentA/ingest",
        "options": {
          "bodyContentType": "json",
          "jsonBody": "={\"driveFileId\": \"{{$json.fileId}}\"}",
          "response": {
            "response": {
              "fullResponse": false,
              "responseFormat": "json"
            }
          },
          "timeout": 30000
        }
      },
      "id": "auto-ingest-file",
      "name": "Auto Ingest File",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [600, 0]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": "CONVERSATIONS_SHEET_ID",
        "sheetName": "Conversations", 
        "columns": {
          "mappingMode": "defineBelow",
          "values": {
            "Timestamp": "={{new Date().toISOString()}}",
            "User": "system",
            "Intent": "auto_ingestion",
            "Input": "={{$json.fileName}}",
            "Output": "={{$json.chunks ? `Processed ${$json.chunks} chunks` : 'Processing failed'}}",
            "Confidence": "N/A",
            "Citations": "={{$json.fileName}}",
            "Error": "={{$json.error || ''}}"
          }
        },
        "options": {}
      },
      "id": "log-auto-ingestion",
      "name": "Log Auto Ingestion",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [800, 0]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.error}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEqual"
              }
            }
          ]
        }
      },
      "id": "check-for-errors",
      "name": "Check for Errors",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1000, 0]
    },
    {
      "parameters": {
        "text": "❌ Auto-ingestion failed for file: {{$json.fileName}}\n\nError: {{$json.error}}\n\nFile ID: {{$json.fileId}}",
        "additionalFields": {
          "chatId": "ERROR_CHAT_ID"
        }
      },
      "id": "send-error-notification",
      "name": "Send Error Notification",
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [1200, -100]
    },
    {
      "parameters": {
        "text": "✅ Auto-ingested: {{$json.fileName}}\n\nProcessed {{$json.chunks}} chunks ({{$json.tokens}} tokens)\n\nFile is now searchable in the knowledge base.",
        "additionalFields": {
          "chatId": "ADMIN_CHAT_ID"
        }
      },
      "id": "send-success-notification", 
      "name": "Send Success Notification",
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [1200, 100]
    }
  ],
  "connections": {
    "Watch Drive Folder": {
      "main": [
        [
          {
            "node": "Process File Event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process File Event": {
      "main": [
        [
          {
            "node": "Should Process?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Process?": {
      "main": [
        [
          {
            "node": "Auto Ingest File",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Auto Ingest File": {
      "main": [
        [
          {
            "node": "Log Auto Ingestion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Auto Ingestion": {
      "main": [
        [
          {
            "node": "Check for Errors",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Errors": {
      "main": [
        [
          {
            "node": "Send Error Notification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Success Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1.0.0",
  "id": "drive-watch",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "tags": []
}
