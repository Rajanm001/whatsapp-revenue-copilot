{
  "name": "WhatsApp Router - Main Orchestrator",
  "nodes": [
    {
      "parameters": {},
      "id": "webhook-whatsapp",
      "name": "WhatsApp Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [0, 0],
      "webhookId": "whatsapp-inbound"
    },
    {
      "parameters": {
        "jsCode": "// Pre-route based on attachments and content\nconst message = $input.first().json;\nconst hasAttachments = message.attachments && message.attachments.length > 0;\nconst messageText = message.text || '';\nconst userId = message.from;\n\nif (hasAttachments) {\n  return {\n    intent: 'knowledge_qa',\n    route: 'agentA',\n    hasAttachments: true,\n    userId,\n    messageText,\n    attachments: message.attachments\n  };\n}\n\n// For text-only messages, we'll need intent classification\nreturn {\n  needsClassification: true,\n  userId,\n  messageText,\n  hasAttachments: false\n};"
      },
      "id": "pre-router",
      "name": "Pre-Router Logic",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [200, 0]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.hasAttachments}}",
              "rightValue": true,
              "operator": {
                "type": "boolean"
              }
            }
          ]
        }
      },
      "id": "has-attachments-check",
      "name": "Has Attachments?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [400, 0]
    },
    {
      "parameters": {
        "url": "http://agenta:8001/agentA/ingest",
        "options": {
          "bodyContentType": "json",
          "jsonBody": "={\"driveFileId\": \"{{$json.attachments[0].id}}\"}",
          "response": {
            "response": {
              "fullResponse": false,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "save-to-drive-and-ingest",
      "name": "Save to Drive & Ingest",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [600, -100]
    },
    {
      "parameters": {
        "url": "={{$json.needsClassification ? 'http://shared:8000/classify' : ''}}",
        "options": {
          "bodyContentType": "json",
          "jsonBody": "={\"message\": \"{{$json.messageText}}\", \"hasAttachments\": false}",
          "response": {
            "response": {
              "fullResponse": false,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "intent-classifier",
      "name": "Intent Classifier",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [600, 100]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.intent}}",
              "rightValue": "knowledge_qa",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ]
        }
      },
      "id": "route-to-agents",
      "name": "Route to Agents",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [800, 0]
    },
    {
      "parameters": {
        "url": "http://agenta:8001/agentA/ask",
        "options": {
          "bodyContentType": "json",
          "jsonBody": "={\"userId\": \"{{$json.userId}}\", \"text\": \"{{$json.messageText}}\"}",
          "response": {
            "response": {
              "fullResponse": false,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "call-agent-a",
      "name": "Call Agent A",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1000, -100]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{$json.intent}}",
              "rightValue": "lead_capture",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "leftValue": "={{$json.intent}}",
              "rightValue": "proposal_request",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "leftValue": "={{$json.intent}}",
              "rightValue": "next_step",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "leftValue": "={{$json.intent}}",
              "rightValue": "status_update",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        }
      },
      "id": "check-dealflow-intents",
      "name": "Check Dealflow Intents",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [1000, 100]
    },
    {
      "parameters": {
        "url": "={{$json.intent === 'lead_capture' ? 'http://agentb:8002/agentB/newlead' : ($json.intent === 'proposal_request' ? 'http://agentb:8002/agentB/proposal-copy' : ($json.intent === 'next_step' ? 'http://agentb:8002/agentB/nextstep-parse' : 'http://agentb:8002/agentB/status-classify'))}}",
        "options": {
          "bodyContentType": "json",
          "jsonBody": "={{$json.intent === 'lead_capture' ? {\"raw\": $json.messageText} : ($json.intent === 'proposal_request' ? {\"lead\": $json.lastLead || {}} : ($json.intent === 'next_step' ? {\"text\": $json.messageText} : {\"label\": \"Unknown\", \"reasonText\": $json.messageText}))}}",
          "response": {
            "response": {
              "fullResponse": false,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "call-agent-b",
      "name": "Call Agent B",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1200, 100]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": "CONVERSATIONS_SHEET_ID",
        "sheetName": "Conversations",
        "columns": {
          "mappingMode": "defineBelow",
          "values": {
            "Timestamp": "={{new Date().toISOString()}}",
            "User": "={{$json.userId}}",
            "Intent": "={{$json.intent}}",
            "Input": "={{$json.messageText}}",
            "Output": "={{$json.answer || $json.title || 'Processing...'}}",
            "Confidence": "={{$json.confidence || 'N/A'}}",
            "Citations": "={{($json.citations || []).map(c => c.title).join(', ')}}",
            "Error": "={{$json.error || ''}}"
          }
        },
        "options": {}
      },
      "id": "log-conversation",
      "name": "Log to Conversations Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [1400, 0]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": "CRM_SHEET_ID", 
        "sheetName": "CRM",
        "columns": {
          "mappingMode": "defineBelow",
          "values": {
            "Timestamp": "={{new Date().toISOString()}}",
            "LeadId": "={{$json.requestId || Date.now()}}",
            "Name": "={{$json.name || ''}}",
            "Company": "={{$json.company || ''}}",
            "Intent": "={{$json.intent || ''}}",
            "Budget": "={{$json.budget || ''}}",
            "Stage": "={{$json.label || 'New'}}",
            "Owner": "system",
            "NextStepDate": "={{$json.startIso || ''}}",
            "Links": "={{$json.proposalLink || ''}}",
            "Notes": "={{$json.notes || $json.reasonSummary || ''}}"
          }
        },
        "options": {}
      },
      "id": "update-crm",
      "name": "Update CRM Sheet", 
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [1400, 200]
    },
    {
      "parameters": {
        "text": "={{$json.answer || $json.title || 'Got it! I\\'ve processed your request.'}}",
        "additionalFields": {}
      },
      "id": "send-whatsapp-response",
      "name": "Send WhatsApp Response",
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [1600, 0]
    }
  ],
  "connections": {
    "WhatsApp Webhook": {
      "main": [
        [
          {
            "node": "Pre-Router Logic",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pre-Router Logic": {
      "main": [
        [
          {
            "node": "Has Attachments?",
            "type": "main", 
            "index": 0
          }
        ]
      ]
    },
    "Has Attachments?": {
      "main": [
        [
          {
            "node": "Save to Drive & Ingest",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Intent Classifier", 
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to Drive & Ingest": {
      "main": [
        [
          {
            "node": "Log to Conversations Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Intent Classifier": {
      "main": [
        [
          {
            "node": "Route to Agents",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route to Agents": {
      "main": [
        [
          {
            "node": "Call Agent A",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Dealflow Intents",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Agent A": {
      "main": [
        [
          {
            "node": "Log to Conversations Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Dealflow Intents": {
      "main": [
        [
          {
            "node": "Call Agent B",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send WhatsApp Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Agent B": {
      "main": [
        [
          {
            "node": "Update CRM Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log to Conversations Sheet": {
      "main": [
        [
          {
            "node": "Send WhatsApp Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update CRM Sheet": {
      "main": [
        [
          {
            "node": "Send WhatsApp Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1.0.0",
  "id": "whatsapp-router",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "tags": []
}
